---

- block:

    # for windows sysprep we need to upload iso file as configmap is not currently working
    # see this PR: https://github.com/kubevirt/kubevirt/pull/3283
    # we should be able to remove this step once validated in the next release
    - include_tasks: check_upload_url.yml

    - name: check list of os templates
      k8s_info:
        api_version: template.openshift.io/v1
        kind: Template
        namespace: "{{ os_template_namespace }}"
        validate_certs: no
        api_key: "{{ api_key }}"
      register: os_templates

    - include_tasks: provision_vm.yml
      loop: "{{ nodes }}"
      loop_control:
        loop_var: template
      when: nodes is defined

    - include_tasks: wait_disk.yml
      loop: "{{ nodes }}"
      loop_control:
        loop_var: template
      when: nodes is defined

    - include_tasks: expand_disk.yml
      loop: "{{ nodes }}"
      loop_control:
        loop_var: template
      vars:
        owner_uid: "{{ new_vms[template.name].metadata.uid | default(None) }}"
      when:
        - nodes is defined
        - template.template is defined
        - (template.disks | default([]) | length) > 0
        - (template.disks[0].size | replace('GiB', '') | int) > (dv_template_disk_info.resources[0].spec.pvc.resources.requests.storage | replace('Gi', '') | int)

    - include_tasks: wait_vm.yml
      loop: "{{ nodes }}"
      loop_control:
        loop_var: template
      when: nodes is defined

    - name: start the vm(s)
      kubevirt_vm:
        state: running
        name: '{{ template.name }}'
        namespace: '{{ target_namespace }}'
        wait: no
        validate_certs: no
        api_key: "{{ api_key }}"
      loop: "{{ nodes }}"
      loop_control:
        loop_var: template
      when: nodes is defined

    - include_tasks: wait_for_remote.yml
      loop: "{{ nodes }}"
      loop_control:
        loop_var: template
      when:
        - nodes is defined

    - include_tasks: detach_cdroms.yml
      loop: "{{ nodes }}"
      loop_control:
        loop_var: template
      when:
        - nodes is defined
        - vm_os_type == 'windows'
        - template.sysprep is undefined or (template.sysprep is defined and template.sysprep|bool)

  rescue:

    - name: set vm_failed variable
      set_fact:
        vm_failed: yes

  always:

    - include_tasks: datastore_iso_remove.yml
      loop: "{{ nodes }}"
      loop_control:
        loop_var: template
      when: nodes is defined

    - name: remove temporary directory
      file:
        path: "{{ temp_directory }}"
        state: absent

- name: fail if needed
  fail:
    msg: "fail to provision vm(s)"
  when: vm_failed|bool